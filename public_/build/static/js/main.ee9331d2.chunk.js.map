{"version":3,"sources":["Context/GlobalState.tsx","Components/IncomeExpense.tsx","Components/Balance.tsx","Components/AddTransactions.tsx","Components/Chart.tsx","Components/Dashboard.tsx","firebase.js","Components/TransactionList.tsx","Components/Profile.tsx","Components/Footer.tsx","Components/Navbar.tsx","Components/Transaction.tsx","App.tsx","serviceWorker.ts","index.tsx","images/add.png","images/de.png","images/dashboard.png","images/icon.png","images/all.png","images/profile.png"],"names":["GlobalContext","createContext","GlobalContextProvider","children","useState","Transactions","setTransactions","Provider","value","addTransactions","TransactionDetail","TransactionAmount","id","Date","getTime","date","removeTransaction","filter","TransactionId","console","log","IncomeExpense","amounts","useContext","map","income","item","reduce","acc","toFixed","expense","className","Balance","total","AddTransactions","setinputerr","setTransactionDetail","setTransactionAmount","type","placeholder","autoComplete","name","required","onChange","e","target","parseFloat","onClick","preventDefault","length","NewTransaction","newExpTransaction","Chart","doughChart","data","labels","datasets","backgroundColor","legend","display","fullWidth","reverse","Dashboard","model","setmodel","isOpen","onRequestClose","ariaHideApp","style","overlay","position","content","width","top","left","bottom","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","color","fontWeight","height","src","add","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TransactionList","sign","del","toDateString","Profile","Footer","Navbar","icon","to","dashboard","all","profile","Transaction","key","App","messaging","requestPermission","then","getToken","token","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.ee9331d2.chunk.js","sourcesContent":["import React, {createContext,useState } from 'react';\nimport { IDType, TransType} from '../Utilities/Types'\n\n\nexport const GlobalContext = createContext<any>(!undefined);\n\n\n\nexport const GlobalContextProvider = ({ children}: any) : JSX.Element => {\n\n\n\n    const [Transactions, setTransactions] = useState<TransType[]>([])\n\n   \n\n    function addTransactions(TransactionDetail: string, TransactionAmount: number) {\n        setTransactions([...Transactions, { TransactionDetail, TransactionAmount, id: new Date().getTime(), date: new Date().getTime(), }]);\n    }\n    \n\n\n\n    const removeTransaction = (id: IDType) => {\n        setTransactions(Transactions.filter((TransactionId: IDType) => TransactionId.id !== id));\n        console.log(id);\n        \n    };\n\n\n    return (\n\n        <GlobalContext.Provider value={{ addTransactions, Transactions, removeTransaction }}>\n\n            {children}\n\n        </GlobalContext.Provider>\n    )\n\n}\n\n","import React, { useContext } from 'react'\n// import CountUp from 'react-countup';\nimport './IncomeExpense.css'\n\nimport { GlobalContext } from '../Context/GlobalState';\n\n\nexport const IncomeExpense = () => {\n    const { Transactions } = useContext(GlobalContext);\n\n    const amounts = Transactions.map((Transactions: any)  => Transactions.TransactionAmount);\n\n    const income = amounts\n        .filter((item: number) => item > 0)\n        .reduce((acc: number, item: number) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense = (amounts\n        .filter((item: number) => item < 0)\n        .reduce((acc: number, item: number) => (acc += item), 0))\n        .toFixed(2);\n    \n\n    return (\n        <div className='inc-exp-container'>\n            <div className='income'>\n                <h5>Income : <span>\n                    {income}\n                    {/* <CountUp\n                        start={0}\n                        end=\n                        duration={2}\n                        separator=\",\"\n                        decimals={0}\n                        decimal=\".\"\n                        prefix=\"RS.\" /> */}\n                </span> </h5>\n                \n\n            </div>\n\n            <div className='expense'>\n                <h5>Expense : <span>\n                    {expense}\n                    {/* <CountUp\n                        start={0}\n                        end=\n                        duration={2}\n                        separator=\",\"\n                        decimals={0}\n                        decimal=\".\"\n                        prefix=\"RS.\" /> */}\n                </span></h5>\n                \n                \n            </div>\n\n        </div>\n    )\n}\n\nexport default IncomeExpense;\n","import React, { useContext } from \"react\";\n// import CountUp from \"react-countup\";\n\nimport { GlobalContext } from \"../Context/GlobalState\";\nimport \"./Balance.css\";\nimport IncomeExpense from \"./IncomeExpense\";\n\nfunction Balance() {\n  const { Transactions } = useContext(GlobalContext);\n\n\n  const amounts = Transactions.map(\n    (Transactions: any) => Transactions.TransactionAmount\n  );\n\n  const total = amounts\n    .reduce((acc: number, item: number) => (acc += item), 0)\n    .toFixed(2);\n\n  return (\n    <div className=\"balance-container\">\n      <div className=\"balance\">\n        <div className=\"blancetext\">\n          <h3 >\n            Balance :\n            <span>\n              {total}\n              {/* <CountUp\n                start={0}\n                end=\n                duration={2.0}\n                separator=\",\"\n                decimals={0}\n                decimal=\".\"\n                prefix=\"RS.\" \n              />*/}\n            </span>\n          </h3>\n        </div>\n\n        <>\n          <IncomeExpense />\n        </>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useState, useContext } from \"react\";\nimport './AddTransactions.css'\nimport { GlobalContext } from \"../Context/GlobalState\";\n\n\n\nconst AddTransactions = () => {\n\n  const { addTransactions} = useContext(GlobalContext)\n    \n    \n  const [inputerr, setinputerr] = useState(false);\n\n  const [TransactionDetail, setTransactionDetail] = useState<string>(\"\");\n  const [TransactionAmount, setTransactionAmount] = useState<number>(0);\n\n  // console.log(TransactionDetail);\n  // console.log(TransactionAmount);\n\n\n  function onSubmitincome(e: React.MouseEvent<HTMLButtonElement>) {\n    \n    e.preventDefault();\n    \n    if (TransactionDetail.length < 1 || TransactionAmount < 1) {\n      setinputerr(true)\n      }\n    \n    else {\n      const NewTransaction = {\n        TransactionDetail,\n        TransactionAmount: TransactionAmount,\n      };\n      console.log(NewTransaction);\n\n      setTransactionDetail(\"\");\n      setTransactionAmount(0);\n\n      addTransactions(TransactionDetail, +TransactionAmount);\n    }\n\n    \n  }\n\n\n\n  function onSubmitexpense(e: React.MouseEvent<HTMLButtonElement>) {\n        e.preventDefault();\n\n        const newExpTransaction = {\n          TransactionDetail,\n          TransactionAmount: TransactionAmount\n        };\n    console.log(newExpTransaction);\n    \n\n    \n    setTransactionDetail(\"\");\n    setTransactionAmount(0);\n\n    addTransactions(TransactionDetail, -TransactionAmount);\n    }\n\n\n  return (\n    <div className=\"addtransactions-container\">\n      <form>\n        <div className=\"add-aransaction\">\n          <input\n            type=\"text\"\n            placeholder=\"Add Transaction...\"\n            autoComplete=\"off\"\n            name=\"TransactionDetail\"\n            value={TransactionDetail}\n            required={true}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setTransactionDetail(e.target.value)\n            }\n          ></input>\n          <br />\n\n          <input\n            type=\"number\"\n            placeholder=\"Add Amount...\"\n            autoComplete=\"off\"\n            name=\"TransactionAmount\"\n            value={TransactionAmount}\n            required\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setTransactionAmount(parseFloat(e.target.value))\n            }\n          ></input>\n          \n\n          \n        </div>\n      </form>\n\n      <div className='buttons'>\n        <button className=\"incomesubmit\" onClick={onSubmitincome}> Add Income </button>\n        <button className=\"expensesubmit\" onClick={onSubmitexpense}>Add Expense</button>\n      </div>\n      \n\n          \n    </div>\n  );\n};\n\nexport default AddTransactions;\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../Context/GlobalState';\nimport { Doughnut } from 'react-chartjs-2';\n\n\n\nfunction Chart() {\n\n    const { Transactions } = useContext(GlobalContext);\n\n    const amounts = Transactions.map((Transactions: any) => Transactions.TransactionAmount);\n\n    const income = amounts\n        .filter((item: number) => item > 0)\n        .reduce((acc: number, item: number) => (acc += item), 0)\n        .toFixed(2);\n\n    const expense = (amounts\n        .filter((item: number) => item < 0)\n        .reduce((acc: number, item: number) => (acc += item), 0))\n        .toFixed(2);\n\n    const total: number = income - expense\n\n    const doughChart = (\n        income ? (\n            <Doughnut data={{\n                \n                labels: ['Balance', 'Income', 'Expense'],\n\n                datasets: [{\n                    data: [total, income, expense],\n                    backgroundColor: [ '#528FEC', '#389760', '#EC9B4E'],\n                    \n                }],\n\n            }} \n\n            legend={{\n                \n                display: true,\n                \"position\": \"left\",\n                fullWidth: false,\n                reverse: false,\n                \"labels\": {\n                    \"fontColor\": \"black\"\n                }\n            }}\n            />) : null\n    );\n\n                // options={{ maintainAspectRatio: false }}\n\n\n    return (\n        <div className='chart-container'>\n            {total > 0 ? doughChart : 'No Transaction' }     \n\n\n        </div>\n        );\n}\n\nexport default Chart\n","import React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport Modal from \"react-modal\";\nimport Balance from \"./Balance\";\n// import Transaction from \"./Transaction\";\nimport add from '../images/add.png'\nimport AddTransactions from './AddTransactions'\nimport Chart from './Chart'\n\n\n\n\nfunction Dashboard() {\n\n  const [model, setmodel] = useState(false);\n\n  return (\n      <div className=\"dashboard-container\">\n\n        <div className=\"balance-div\">\n          <Balance />\n        </div>\n\n      <div className='chart-div'>\n        <Chart />\n      </div>\n{/*       \n      <div className=\"transaction-div\">\n        <Transaction />\n      </div> */}\n\n\n\n        \n\n\n\n\n\n        \n        <Modal\n        isOpen={model}\n        onRequestClose={() => setmodel(!true)}\n        ariaHideApp={false}\n          style={{\n            overlay: {\n              position: \"fixed\",\n              backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n            },\n            // alignItems: \"center\",\n\n            content: {\n              width: '250px',\n              position: \"relative\",\n              top: \"150px\",\n              left: \"0px\",\n              \n              bottom: \"150px\",\n              border: \"1px solid #ccc\",\n              background: \"#39759E\",\n              overflow: \"auto\",\n              WebkitOverflowScrolling: \"touch\",\n              borderRadius: \"10px\",\n              outline: \"none\",\n              padding: \"10px\",\n            },\n          }}\n        >\n        <div>\n          <button\n            onClick={() => setmodel(!true)}\n            style={{\n              color: 'white',\n              position: 'relative',\n              top: '0px',\n              backgroundColor: \"#e73d1f\",\n              fontWeight: 600,\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              height: \"30px\"            }}\n          >\n            X\n            </button>\n        </div>\n        <AddTransactions />\n         \n        </Modal>\n\n   \n        <img src={add} alt='add' id='bttn' className='btn'\n        onClick={() => setmodel(true)}\n          style={{ backgroundColor: \"#e73d1f\" }} />\n\n\n      </div>\n  );\n}\n\nexport default Dashboard;\n","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyCmstdc0aWFOJhme6zxWSaMbQrp5jbnqRI\",\n    authDomain: \"expense-tracker-3c646.firebaseapp.com\",\n    databaseURL: \"https://expense-tracker-3c646.firebaseio.com\",\n    projectId: \"expense-tracker-3c646\",\n    storageBucket: \"expense-tracker-3c646.appspot.com\",\n    messagingSenderId: \"279193500809\",\n    appId: \"1:279193500809:web:ff6f36c0ae40e4010e9a58\"\n}\n\n\nfirebase.initializeApp(config)\n\nexport default firebase","import React, { useContext } from \"react\";\nimport \"./TransactionList.css\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nimport del from \"../images/de.png\";\n\n\n\ntype Props = {\n  TransactionDetail: string;\n  TransactionAmount: number;\n  id: number;\n  date: number;\n};\n\n\nconst TransactionList: React.FC<Props | any> = ({ Transactions }) => {\n  console.log(Transactions);\n\n  const { removeTransaction } = useContext(GlobalContext);\n\n  const sign = Transactions?.TransactionAmount < 0 ? \"-\" : \"+\";\n\n  return (\n    <div className=\"transactionlist-container\">\n      <div\n        id=\"id-transactions\"\n        className={Transactions?.TransactionAmount > 0 ? \"plus\" : \"minus\"}\n      >\n        <img\n          src={del}\n          alt=\"delete\"\n          onClick={() => removeTransaction(Transactions.id)}\n        />\n        <div className=\"textdate\">\n          <h5>{Transactions?.TransactionDetail}</h5>\n          <span className=\"date\"> {new Date(Transactions?.date).toDateString()}{\" \"}\n          </span>\n        </div>\n\n        <h4>\n          {sign}RS.{Transactions?.TransactionAmount}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","import React from 'react'\nimport './Profile.css'\n\nfunction Profile() {\n    return (\n        <div className='profile-container'>\n            \n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className='footer-container'>\n            Created By : Irfan Ahmed\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport './Navbar.css'\nimport { Link } from 'react-router-dom'\nimport dashboard from '../images/dashboard.png'\nimport add from '../images/add.png'\nimport icon from '../images/icon.png'\nimport all from '../images/all.png'\nimport profile from '../images/profile.png'\n\n\nfunction Navbar() {\n    return (\n        <div className='navbar-container'>\n            <div className='title'> <img src={icon} alt='icon' /> <span>Expense Tracker </span></div>\n            <div className='links'> \n                <Link id='links' className='dashboard-link' to=\"/\" ><img src={dashboard} alt='dashboard' /> <h5>DashBoard</h5> </Link>\n                <Link id='links' className='addtransactions-link' to=\"/AddTransactions\" ><img src={add} alt='add' /><h5>Add Transaction</h5></Link>\n\n                <Link id='links' className='all-link' to=\"/Transaction\" ><img src={all} alt='all' /><h5>All Transaction</h5></Link>\n                <Link id='links' className='profile-link' to=\"/Profile\" ><img src={profile} alt='Profile' /><h5>Profile</h5></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, {useContext} from 'react'\nimport './Transactions.css'\nimport TransactionList from './TransactionList'\nimport { GlobalContext } from '../Context/GlobalState';\nimport { TransType } from '../Utilities/Types'\n\n\n\nfunction Transaction() {\n\n    const { Transactions } = useContext(GlobalContext)\n\n    console.log(Transactions);\n\n    return  (\n\n        <div className=\"transaction-container\">\n            <ul>\n                {Transactions.map((Transactions: TransType, key: number ) => {\n                    return <TransactionList Transactions={Transactions} key={key} />;\n                })}\n            </ul>\n\n        </div>\n    )\n}\n\nexport default Transaction","import React from 'react';\nimport './App.css';\nimport Dashboard from './Components/Dashboard';\nimport firebase from './firebase'\n\nimport { Routes, Route } from \"react-router-dom\";\nimport { GlobalContextProvider } from './Context/GlobalState';\n\nimport TransactionList from \"./Components/TransactionList\";\nimport Profile from \"./Components/Profile\";\nimport Balance from \"./Components/Balance\";\nimport Footer from \"./Components/Footer\";\nimport Navbar from \"./Components/Navbar\";\nimport AddTransactions from \"./Components/AddTransactions\";\nimport Transaction from \"./Components/Transaction\";\n\n\nfunction App(): JSX.Element  {\n\n  const messaging = firebase.messaging();\n  messaging.requestPermission().then(() => {\n    return messaging.getToken ()\n  }).then((token) => {\n    console.log('token', token);\n    \n  })\n\n  return (\n    <GlobalContextProvider>\n\n<div className=\"App\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Dashboard /> } />\n          <Route path=\"/AddTransactions\" element={<AddTransactions />} />\n          <Route path=\"/Balance\" element={<Balance />} />\n          <Route path=\"/TransactionList\" element={<TransactionList />} />\n          <Route path=\"/Transaction\" element={<Transaction />} />\n          <Route path=\"/Profile\" element={<Profile />} />\n        </Routes>\n\n        <Footer />    \n    </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <Router >\n    <App />\n    </Router>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/add.973efc87.png\";","module.exports = __webpack_public_path__ + \"static/media/de.aecb55e8.png\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.1c3c8c05.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.abbd5d83.png\";","module.exports = __webpack_public_path__ + \"static/media/all.f90444fc.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.825e7c4b.png\";"],"sourceRoot":""}